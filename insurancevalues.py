import numpy as np
import sys

# phi = 1.5
values = [0., 0.322102, 0.595542, 0.828802, 1.02884, 1.20139, 1.35117, \
1.48205, 1.59725, 1.69944, 1.7908, 1.87318, 1.94807, 2.01677, \
2.08031, 2.13958, 2.19533, 2.24818, 2.29864, 2.34706, 2.39354, \
2.43818, 2.48104, 2.52222, 2.56178, 2.5998, 2.63634, 2.67146, \
2.70523, 2.73771, 2.76894, 2.79898, 2.82788, 2.85569, 2.88245, \
2.9082, 2.93299, 2.95685, 2.97983, 3.00195, 3.02326, 3.04377, \
3.06354, 3.08257, 3.10091, 3.11858, 3.13561, 3.15201, 3.16782, \
3.18306, 3.19775, 3.2119, 3.22555, 3.2387, 3.25138, 3.26361, 3.2754, \
3.28677, 3.29774, 3.30831, 3.3185, 3.32834, 3.33782, 3.34697, 3.3558, \
3.36431, 3.37252, 3.38044, 3.38808, 3.39546, 3.40257, 3.40943, \
3.41605, 3.42244, 3.42861, 3.43456, 3.4403, 3.44584, 3.45118, \
3.45634, 3.46132, 3.46612, 3.47076, 3.47524, 3.47956, 3.48372, \
3.48775, 3.49163, 3.49538, 3.499, 3.50249, 3.50586, 3.50911, 3.51226, \
3.51529, 3.51821, 3.52104, 3.52377, 3.5264, 3.52894, 3.53139]

def solution(x): 
    if len(x) > 1:
        x = x[0]

    max = 2
    min = 0
    dt = len(values)/max
    if x <= min:
      return min
    if x >= max:
      return values[-1]

    index = int(np.floor(x*dt))
    return values[index]

def grad(x):
    if len(x) > 1:
        x = x[0]

    v = np.array([x, 0])
    quot = (solution(v+dt)-solution(v))/dt
    return quot
